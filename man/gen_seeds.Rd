% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{gen_seeds}
\alias{gen_seeds}
\title{Generate random seeds}
\usage{
gen_seeds(design, nsets = 1L, CMRG.seed = NULL)
}
\arguments{
\item{design}{design matrix that requires a unique seed per condition, or
a number indicating the number of seeds to generate}

\item{nsets}{if separating the simulation across independent nodes manually
then the number of independent sets can be specified to generate a matrix
of seeds. This will return a matrix object with \code{nsets} columns to
be indexed column-wise for each manual seed specification}

\item{CMRG.seed}{the initial \code{set.seed} number used to generate a sequence
of independent seeds according to the L'Ecuyer-CMRG (2002) method. This
is recommended whenever quality random number generation is required
across similar (if not identical) simulation jobs
(e.g., see \code{\link{runArraySimulation}})}
}
\description{
Generate seeds to be passed to \code{runSimulation}'s \code{seed} input. Values
are sampled from 1 to 2147483647.
}
\examples{

# generate 1 seed
gen_seeds(1)

# generate 5 unique seeds
gen_seeds(5)

# generate from nrow(design)
design <- createDesign(factorA=c(1,2,3),
                       factorB=letters[1:3])
seeds <- gen_seeds(design)
seeds

# two distinct sets of seeds
multi_seeds <- gen_seeds(design, nsets=2)
multi_seeds  # index column-wise for runSimulation(..., seed)

# generate seeds for runArraySimulation()
(generating_seed <- gen_seeds(1L))
seed_list <- gen_seeds(design, CMRG=generating_seed)
seed_list

}
\author{
Phil Chalmers \email{rphilip.chalmers@gmail.com}
}
